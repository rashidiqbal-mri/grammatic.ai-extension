{"version":3,"file":"contentScript.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://react-js-chrome-extension/./src/contentScript/contentScript.ts"],"sourcesContent":["function addButtonToTextBoxes() {\n    let textBoxes = document.querySelectorAll(\"input[type='text'], textarea\");\n    // Variable to store the menu container element\n    let menuContainer = null;\n    textBoxes.forEach((textBox) => {\n        let container = document.createElement(\"div\");\n        container.style.position = \"relative\";\n        container.style.display = \"inline-block\";\n        textBox.before(container);\n        container.appendChild(textBox);\n        let button = document.createElement(\"button\");\n        button.innerText = \"RI\";\n        button.style.backgroundColor = \"teal\";\n        button.style.position = \"absolute\";\n        button.style.borderRadius = \"100%\";\n        button.style.padding = \"0.5em\";\n        button.style.border = \"none\";\n        button.style.color = \"#fff\";\n        button.style.bottom = \"2px\";\n        button.style.right = \"2px\";\n        container.appendChild(button);\n        button.addEventListener(\"click\", (event) => {\n            event.preventDefault(); // prevent form submission\n            const buttonRect = button.getBoundingClientRect();\n            const buttonCoordinates = {\n                x: buttonRect.x + window.scrollX,\n                y: buttonRect.y + window.scrollY,\n            };\n            // Check if the menu is already open\n            if (menuContainer) {\n                // If the menu is open, close it and set menuContainer to null\n                menuContainer.remove();\n                menuContainer = null;\n            }\n            else {\n                // If the menu is not open, create the menu container element\n                menuContainer = document.createElement('div');\n                menuContainer.style.position = 'absolute';\n                menuContainer.style.top = buttonRect.y + buttonRect.height + window.scrollY + 'px';\n                menuContainer.style.left = buttonRect.x + window.scrollX + 'px';\n                menuContainer.style.zIndex = '9999'; // ensure the menu is on top\n                // Append the menu container to the body\n                document.body.appendChild(menuContainer);\n                // Inject the menu component into the menu container\n                menuContainer.innerHTML = `\n          <iframe\n            src=\"${chrome.runtime.getURL('menu.html')}\"\n            style=\"border: none; width: 400px; height: 300px;\"\n          ></iframe>\n        `;\n            }\n        });\n        textBox.addEventListener(\"focus\", () => {\n            button.style.display = \"inline-block\";\n        });\n    });\n}\naddButtonToTextBoxes();\n// ... (rest of the code)\n// Send a message to the background script with the selected text\nfunction copySelectedTextToBackground() {\n    const activeElement = document.activeElement;\n    if (activeElement instanceof HTMLInputElement || activeElement instanceof HTMLTextAreaElement) {\n        const selectedText = activeElement.value.substring(activeElement.selectionStart, activeElement.selectionEnd);\n        if (selectedText) {\n            chrome.runtime.sendMessage({ type: 'selectedText', text: selectedText });\n        }\n    }\n}\ndocument.addEventListener('mouseup', copySelectedTextToBackground);\ndocument.addEventListener('keyup', copySelectedTextToBackground);\n//textbox\nfunction copyTextboxTextToBackground() {\n    const activeElement = document.activeElement;\n    if (activeElement instanceof HTMLInputElement || activeElement instanceof HTMLTextAreaElement) {\n        const textboxText = activeElement.value;\n        if (textboxText) {\n            chrome.runtime.sendMessage({ type: 'textboxText', text: textboxText });\n        }\n    }\n}\ndocument.addEventListener('focusin', copyTextboxTextToBackground);\ndocument.addEventListener('input', copyTextboxTextToBackground);\ndocument.addEventListener('mouseup', copyTextboxTextToBackground);\ndocument.addEventListener('keyup', copyTextboxTextToBackground);\n"],"names":[],"sourceRoot":""}